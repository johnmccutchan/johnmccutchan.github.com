{"dependencies":[{"uri":"package:asset_pack/asset_pack.dart","name":"package:asset_pack/asset_pack.dart","id":"asset_pack","children":[{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"Interface of an [AssetLoader]. An asset loader is responsible\nfor loading an object from a url pointing to a network or filesystem.","uri":"package:asset_pack/src/asset_pack/asset_loader.dart","name":"AssetLoader","id":"AssetLoader","children":[{"returnType":{"refId":"dart.async/Future","arguments":[],"name":"Future"},"isStatic":true,"name":"httpLoad","id":"httpLoad4()","children":[{"ref":{"refId":"asset_pack/Asset","name":"Asset"},"name":"asset","id":"asset","line":"28","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"responseType","id":"responseType","line":"29","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"extractResponse","id":"extractResponse","children":[{"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"package:asset_pack/src/asset_pack/asset_loader.dart","name":"HttpRequest","id":"HttpRequest","line":"30","kind":"param"}],"line":"13","kind":"functiontype"}],"line":"30","kind":"param"},{"ref":{"refId":"asset_pack/AssetPackTrace","name":"AssetPackTrace"},"name":"tracer","id":"tracer","line":"31","kind":"param"}],"line":"27","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[],"name":"Future"},"comment":"Fetch [asset] Url.","name":"load","id":"load2()","children":[{"ref":{"refId":"asset_pack/Asset","name":"Asset"},"name":"asset","id":"asset","kind":"param"},{"ref":{"refId":"asset_pack/AssetPackTrace","name":"AssetPackTrace"},"name":"tracer","id":"tracer","kind":"param"}],"line":"68","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Delete fetched [arg].","name":"delete","id":"delete1()","children":[{"name":"arg","id":"arg","kind":"param"}],"line":"70","kind":"method"}],"line":"25","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"Interface of an [AssetImporter]. An asset importer is responsible for\nInitializing the [Asset.imported] field and importing an object\nreturned from a loader.","uri":"package:asset_pack/src/asset_pack/asset_importer.dart","name":"AssetImporter","id":"AssetImporter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"Must initialize imported field in [asset].","name":"initialize","id":"initialize1()","children":[{"ref":{"refId":"asset_pack/Asset","name":"Asset"},"name":"asset","id":"asset","kind":"param"}],"line":"28","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"asset_pack/Asset","name":"Asset"}],"name":"Future"},"comment":"Import [payload] and assign it to imported field in [asset].","name":"import","id":"import3()","children":[{"name":"payload","id":"payload","kind":"param"},{"ref":{"refId":"asset_pack/Asset","name":"Asset"},"name":"asset","id":"asset","kind":"param"},{"ref":{"refId":"asset_pack/AssetPackTrace","name":"AssetPackTrace"},"name":"tracer","id":"tracer","kind":"param"}],"line":"30","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Delete [imported] object.","name":"delete","id":"delete1()","children":[{"name":"imported","id":"imported","kind":"param"}],"line":"32","kind":"method"}],"line":"26","kind":"class"}],"line":"21","kind":"library"},{"uri":"dart-sdk/lib/core/core.dart","name":"dart:core","id":"dart.core","children":[{"comment":"\nEverything in Dart is an [Object].\n","uri":"dart-sdk/lib/core/object.dart","name":"Object","id":"Object","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns a string representation of this object.\n","name":"toString","id":"toString0()","line":"48","kind":"method"},{"comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","name":"noSuchMethod","id":"noSuchMethod1()","children":[{"ref":{"refId":"dart.core/Invocation","name":"Invocation"},"name":"invocation","id":"invocation","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","name":"hashCode","id":"hashCode","line":"43","kind":"property"},{"ref":{"refId":"dart.core/Type","name":"Type"},"comment":"\nA representation of the runtime type of the object.\n","name":"runtimeType","id":"runtimeType","line":"65","kind":"property"},{"comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","name":"Object","id":"Object0()","line":"18","kind":"constructor"}],"line":"10","kind":"class"}],"line":"5","kind":"library"}],"comment":"Spectre asset_pack companion library ","uri":"package:spectre/spectre_asset_pack.dart","name":"package:spectre/spectre_asset_pack.dart","id":"spectre_asset_pack","children":[{"returnType":{"refId":"void","name":"void"},"comment":"Register the spectre graphics device with the asset_pack library.\nasset manager. After calling this function, the asset manager\nwill be able to load meshes, textures, and shaders.\n","uri":"package:spectre/src/spectre_asset_pack/spectre_asset_pack.dart","name":"registerSpectreWithAssetManager","id":"registerSpectreWithAssetManager2()","children":[{"ref":{"refId":"spectre/GraphicsDevice","name":"GraphicsDevice"},"name":"graphicsDevice","id":"graphicsDevice","kind":"param"},{"ref":{"refId":"asset_pack/AssetManager","name":"AssetManager"},"name":"assetManager","id":"assetManager","line":"29","kind":"param"}],"line":"28","kind":"method"},{"superclass":{"refId":"asset_pack/AssetLoader","name":"AssetLoader"},"uri":"package:spectre/src/spectre_asset_pack/texture.dart","name":"_ImagePackLoader","isPrivate":true,"id":"_ImagePackLoader","children":[{"returnType":{"refId":"dart.async/Future","arguments":[],"name":"Future"},"name":"load","id":"load2()","children":[{"ref":{"refId":"asset_pack/Asset","name":"Asset"},"name":"asset","id":"asset","kind":"param"},{"ref":{"refId":"asset_pack/AssetPackTrace","name":"AssetPackTrace"},"name":"tracer","id":"tracer","kind":"param"}],"line":"96","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"delete","id":"delete1()","children":[{"name":"arg","id":"arg","kind":"param"}],"line":"122","kind":"method"}],"line":"95","kind":"class"},{"superclass":{"refId":"asset_pack/AssetImporter","name":"AssetImporter"},"uri":"package:spectre/src/spectre_asset_pack/texture.dart","name":"TexCubeImporter","id":"TexCubeImporter","children":[{"returnType":{"refId":"void","name":"void"},"name":"initialize","id":"initialize1()","children":[{"ref":{"refId":"asset_pack/Asset","name":"Asset"},"name":"asset","id":"asset","kind":"param"}],"line":"60","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[],"name":"Future"},"name":"import","id":"import3()","children":[{"name":"payload","id":"payload","kind":"param"},{"ref":{"refId":"asset_pack/Asset","name":"Asset"},"name":"asset","id":"asset","kind":"param"},{"ref":{"refId":"asset_pack/AssetPackTrace","name":"AssetPackTrace"},"name":"tracer","id":"tracer","kind":"param"}],"line":"64","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"delete","id":"delete1()","children":[{"name":"imported","id":"imported","kind":"param"}],"line":"88","kind":"method"},{"ref":{"refId":"spectre/GraphicsDevice","name":"GraphicsDevice"},"isFinal":true,"name":"device","id":"device","line":"57","kind":"variable"},{"name":"TexCubeImporter","id":"TexCubeImporter1()","children":[{"initializedField":{"refId":"spectre_asset_pack/TexCubeImporter/device","name":"device"},"ref":{"refId":"spectre/GraphicsDevice","name":"GraphicsDevice"},"name":"device","id":"device","kind":"param"}],"line":"58","kind":"constructor"}],"line":"56","kind":"class"},{"superclass":{"refId":"asset_pack/AssetImporter","name":"AssetImporter"},"uri":"package:spectre/src/spectre_asset_pack/texture.dart","name":"Tex2DImporter","id":"Tex2DImporter","children":[{"returnType":{"refId":"void","name":"void"},"name":"initialize","id":"initialize1()","children":[{"ref":{"refId":"asset_pack/Asset","name":"Asset"},"name":"asset","id":"asset","kind":"param"}],"line":"28","kind":"method"},{"returnType":{"refId":"spectre/Texture2D","name":"Texture2D"},"name":"_processImageElement","isPrivate":true,"id":"_processImageElement2()","children":[{"ref":{"refId":"asset_pack/Asset","name":"Asset"},"name":"request","id":"request","kind":"param"},{"ref":{"refId":"dart.dom.html/ImageElement","name":"ImageElement"},"name":"pixels","id":"pixels","kind":"param"}],"line":"31","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[],"name":"Future"},"name":"import","id":"import3()","children":[{"name":"payload","id":"payload","kind":"param"},{"ref":{"refId":"asset_pack/Asset","name":"Asset"},"name":"asset","id":"asset","kind":"param"},{"ref":{"refId":"asset_pack/AssetPackTrace","name":"AssetPackTrace"},"name":"tracer","id":"tracer","kind":"param"}],"line":"37","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"delete","id":"delete1()","children":[{"name":"imported","id":"imported","kind":"param"}],"line":"47","kind":"method"},{"ref":{"refId":"spectre/GraphicsDevice","name":"GraphicsDevice"},"isFinal":true,"name":"device","id":"device","line":"25","kind":"variable"},{"name":"Tex2DImporter","id":"Tex2DImporter1()","children":[{"initializedField":{"refId":"spectre_asset_pack/Tex2DImporter/device","name":"device"},"ref":{"refId":"spectre/GraphicsDevice","name":"GraphicsDevice"},"name":"device","id":"device","kind":"param"}],"line":"26","kind":"constructor"}],"kind":"class"},{"superclass":{"refId":"asset_pack/AssetImporter","name":"AssetImporter"},"uri":"package:spectre/src/spectre_asset_pack/shader.dart","name":"ShaderProgramImporter","id":"ShaderProgramImporter","children":[{"returnType":{"refId":"void","name":"void"},"name":"initialize","id":"initialize1()","children":[{"ref":{"refId":"asset_pack/Asset","name":"Asset"},"name":"asset","id":"asset","kind":"param"}],"line":"112","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[],"name":"Future"},"name":"import","id":"import3()","children":[{"name":"payload","id":"payload","kind":"param"},{"ref":{"refId":"asset_pack/Asset","name":"Asset"},"name":"asset","id":"asset","kind":"param"},{"ref":{"refId":"asset_pack/AssetPackTrace","name":"AssetPackTrace"},"name":"tracer","id":"tracer","kind":"param"}],"line":"121","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"delete","id":"delete1()","children":[{"ref":{"refId":"spectre/ShaderProgram","name":"ShaderProgram"},"name":"imported","id":"imported","kind":"param"}],"line":"148","kind":"method"},{"ref":{"refId":"spectre/GraphicsDevice","name":"GraphicsDevice"},"isFinal":true,"name":"device","id":"device","line":"109","kind":"variable"},{"name":"ShaderProgramImporter","id":"ShaderProgramImporter1()","children":[{"initializedField":{"refId":"spectre_asset_pack/ShaderProgramImporter/device","name":"device"},"ref":{"refId":"spectre/GraphicsDevice","name":"GraphicsDevice"},"name":"device","id":"device","kind":"param"}],"line":"110","kind":"constructor"}],"line":"108","kind":"class"},{"superclass":{"refId":"asset_pack/AssetLoader","name":"AssetLoader"},"uri":"package:spectre/src/spectre_asset_pack/shader.dart","name":"_TextListLoader","isPrivate":true,"id":"_TextListLoader","children":[{"returnType":{"refId":"dart.async/Future","arguments":[],"name":"Future"},"name":"load","id":"load2()","children":[{"ref":{"refId":"asset_pack/Asset","name":"Asset"},"name":"asset","id":"asset","kind":"param"},{"ref":{"refId":"asset_pack/AssetPackTrace","name":"AssetPackTrace"},"name":"tracer","id":"tracer","kind":"param"}],"line":"80","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"delete","id":"delete1()","children":[{"name":"arg","id":"arg","kind":"param"}],"line":"104","kind":"method"}],"line":"79","kind":"class"},{"superclass":{"refId":"asset_pack/AssetImporter","name":"AssetImporter"},"uri":"package:spectre/src/spectre_asset_pack/shader.dart","name":"FragmentShaderImporter","id":"FragmentShaderImporter","children":[{"returnType":{"refId":"void","name":"void"},"name":"initialize","id":"initialize1()","children":[{"ref":{"refId":"asset_pack/Asset","name":"Asset"},"name":"asset","id":"asset","kind":"param"}],"line":"56","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[],"name":"Future"},"name":"import","id":"import3()","children":[{"name":"payload","id":"payload","kind":"param"},{"ref":{"refId":"asset_pack/Asset","name":"Asset"},"name":"asset","id":"asset","kind":"param"},{"ref":{"refId":"asset_pack/AssetPackTrace","name":"AssetPackTrace"},"name":"tracer","id":"tracer","kind":"param"}],"line":"60","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"delete","id":"delete1()","children":[{"ref":{"refId":"spectre/FragmentShader","name":"FragmentShader"},"name":"imported","id":"imported","kind":"param"}],"line":"70","kind":"method"},{"ref":{"refId":"spectre/GraphicsDevice","name":"GraphicsDevice"},"isFinal":true,"name":"device","id":"device","line":"54","kind":"variable"},{"name":"FragmentShaderImporter","id":"FragmentShaderImporter1()","children":[{"initializedField":{"refId":"spectre_asset_pack/FragmentShaderImporter/device","name":"device"},"ref":{"refId":"spectre/GraphicsDevice","name":"GraphicsDevice"},"name":"device","id":"device","kind":"param"}],"line":"55","kind":"constructor"}],"line":"53","kind":"class"},{"superclass":{"refId":"asset_pack/AssetImporter","name":"AssetImporter"},"uri":"package:spectre/src/spectre_asset_pack/shader.dart","name":"VertexShaderImporter","id":"VertexShaderImporter","children":[{"returnType":{"refId":"void","name":"void"},"name":"initialize","id":"initialize1()","children":[{"ref":{"refId":"asset_pack/Asset","name":"Asset"},"name":"asset","id":"asset","kind":"param"}],"line":"28","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[],"name":"Future"},"name":"import","id":"import3()","children":[{"name":"payload","id":"payload","kind":"param"},{"ref":{"refId":"asset_pack/Asset","name":"Asset"},"name":"asset","id":"asset","kind":"param"},{"ref":{"refId":"asset_pack/AssetPackTrace","name":"AssetPackTrace"},"name":"tracer","id":"tracer","kind":"param"}],"line":"33","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"delete","id":"delete1()","children":[{"ref":{"refId":"spectre/VertexShader","name":"VertexShader"},"name":"imported","id":"imported","kind":"param"}],"line":"44","kind":"method"},{"ref":{"refId":"spectre/GraphicsDevice","name":"GraphicsDevice"},"isFinal":true,"name":"device","id":"device","line":"25","kind":"variable"},{"name":"VertexShaderImporter","id":"VertexShaderImporter1()","children":[{"initializedField":{"refId":"spectre_asset_pack/VertexShaderImporter/device","name":"device"},"ref":{"refId":"spectre/GraphicsDevice","name":"GraphicsDevice"},"name":"device","id":"device","kind":"param"}],"line":"26","kind":"constructor"}],"kind":"class"},{"superclass":{"refId":"asset_pack/AssetImporter","name":"AssetImporter"},"uri":"package:spectre/src/spectre_asset_pack/mesh.dart","name":"MeshImporter","id":"MeshImporter","children":[{"returnType":{"refId":"void","name":"void"},"name":"initialize","id":"initialize1()","children":[{"ref":{"refId":"asset_pack/Asset","name":"Asset"},"name":"asset","id":"asset","kind":"param"}],"line":"30","kind":"method"},{"returnType":{"refId":"spectre/SpectreMesh","name":"SpectreMesh"},"name":"_processMesh","isPrivate":true,"id":"_processMesh2()","children":[{"ref":{"refId":"asset_pack/Asset","name":"Asset"},"name":"asset","id":"asset","kind":"param"},{"ref":{"refId":"dart.core/Map","name":"Map"},"name":"json","id":"json","kind":"param"}],"line":"33","kind":"method"},{"returnType":{"refId":"spectre/SpectreMesh","name":"SpectreMesh"},"name":"_processMeshes","isPrivate":true,"id":"_processMeshes3()","children":[{"ref":{"refId":"asset_pack/Asset","name":"Asset"},"name":"asset","id":"asset","kind":"param"},{"ref":{"refId":"dart.core/List","name":"List"},"name":"meshes","id":"meshes","kind":"param"},{"ref":{"refId":"asset_pack/AssetPackTrace","name":"AssetPackTrace"},"name":"tracer","id":"tracer","kind":"param"}],"line":"64","kind":"method"},{"returnType":{"refId":"spectre/SpectreMesh","name":"SpectreMesh"},"name":"_processIndexedMesh","isPrivate":true,"id":"_processIndexedMesh2()","children":[{"ref":{"refId":"asset_pack/Asset","name":"Asset"},"name":"asset","id":"asset","kind":"param"},{"ref":{"refId":"dart.core/Map","name":"Map"},"name":"indexedMesh","id":"indexedMesh","kind":"param"}],"line":"84","kind":"method"},{"returnType":{"refId":"spectre/SpectreMesh","name":"SpectreMesh"},"name":"_processArrayMesh","isPrivate":true,"id":"_processArrayMesh2()","children":[{"ref":{"refId":"asset_pack/Asset","name":"Asset"},"name":"asset","id":"asset","kind":"param"},{"ref":{"refId":"dart.core/Map","name":"Map"},"name":"arrayMesh","id":"arrayMesh","kind":"param"}],"line":"88","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"asset_pack/Asset","name":"Asset"}],"name":"Future"},"name":"import","id":"import3()","children":[{"name":"payload","id":"payload","kind":"param"},{"ref":{"refId":"asset_pack/Asset","name":"Asset"},"name":"asset","id":"asset","kind":"param"},{"ref":{"refId":"asset_pack/AssetPackTrace","name":"AssetPackTrace"},"name":"tracer","id":"tracer","kind":"param"}],"line":"93","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"delete","id":"delete1()","children":[{"ref":{"refId":"spectre/SpectreMesh","name":"SpectreMesh"},"name":"imported","id":"imported","kind":"param"}],"line":"120","kind":"method"},{"ref":{"refId":"spectre/GraphicsDevice","name":"GraphicsDevice"},"isFinal":true,"name":"device","id":"device","line":"25","kind":"variable"},{"name":"MeshImporter","id":"MeshImporter1()","children":[{"initializedField":{"refId":"spectre_asset_pack/MeshImporter/device","name":"device"},"ref":{"refId":"spectre/GraphicsDevice","name":"GraphicsDevice"},"name":"device","id":"device","kind":"param"}],"line":"26","kind":"constructor"}],"kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"Resource formats contained in DDS.\n\nThis mostly corresponds to the [DXGI_FORMAT](http://msdn.microsoft.com/en-us/library/windows/desktop/bb173059.aspx)\nbut there are some additional formats added that correspond to [D3DFORMAT](http://msdn.microsoft.com/en-us/library/windows/desktop/bb172558.aspx).\nFormats that are not expected within a DDS file are not enumerated.","uri":"package:spectre/src/spectre_asset_pack/dds_resource_format.dart","name":"DdsResourceFormat","id":"DdsResourceFormat","children":[{"returnType":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"getBitsPerPixel","id":"getBitsPerPixel1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"value","id":"value","kind":"param"}],"line":"169","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"comment":"Determines whether the format is block compressed.","name":"isBlockCompressed","id":"isBlockCompressed1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"value","id":"value","kind":"param"}],"line":"245","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"An unknown format.","name":"Unknown","id":"Unknown","line":"30","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"FloatR32G32B32A32","id":"FloatR32G32B32A32","line":"37","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"UintR32G32B32A32","id":"UintR32G32B32A32","line":"38","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"IntR32G32B32A32","id":"IntR32G32B32A32","line":"39","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"FloatR32G32B32","id":"FloatR32G32B32","line":"41","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"UintR32G32B32","id":"UintR32G32B32","line":"42","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"IntR32G32B32","id":"IntR32G32B32","line":"43","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"FloatR16G16B16A16","id":"FloatR16G16B16A16","line":"51","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"UnormR16G16B16A16","id":"UnormR16G16B16A16","line":"52","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"UintR16G16B16A16","id":"UintR16G16B16A16","line":"53","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"NormR16G16B16A16","id":"NormR16G16B16A16","line":"54","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"IntR16G16B16A16","id":"IntR16G16B16A16","line":"55","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"FloatR32G32","id":"FloatR32G32","line":"57","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"UintR32G32","id":"UintR32G32","line":"58","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"IntR32G32","id":"IntR32G32","line":"59","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"UnormR10G10B10A2","id":"UnormR10G10B10A2","line":"70","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"UintR10G10B10A2","id":"UintR10G10B10A2","line":"71","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"FloatR11G11B10","id":"FloatR11G11B10","line":"72","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"UnormR8G8B8A8","id":"UnormR8G8B8A8","line":"74","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"SrgbUnormR8G8B8A8","id":"SrgbUnormR8G8B8A8","line":"75","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"UintR8G8B8A8","id":"UintR8G8B8A8","line":"76","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"NormR8G8B8A8","id":"NormR8G8B8A8","line":"77","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"IntR8G8B8A8","id":"IntR8G8B8A8","line":"78","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"FloatR16G16","id":"FloatR16G16","line":"80","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"UnormR16G16","id":"UnormR16G16","line":"81","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"UintR16G16","id":"UintR16G16","line":"82","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"NormR16G16","id":"NormR16G16","line":"83","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"IntR16G16","id":"IntR16G16","line":"84","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"FloatR32","id":"FloatR32","line":"87","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"UintR32","id":"UintR32","line":"88","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"IntR32","id":"IntR32","line":"89","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"UnormR8G8","id":"UnormR8G8","line":"95","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"UintR8G8","id":"UintR8G8","line":"96","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"NormR8G8","id":"NormR8G8","line":"97","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"IntR8G8","id":"IntR8G8","line":"98","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"FloatR16","id":"FloatR16","line":"100","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"UnormR16","id":"UnormR16","line":"102","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"UintR16","id":"UintR16","line":"103","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"NormR16","id":"NormR16","line":"104","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"IntR16","id":"IntR16","line":"105","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"UnormR8","id":"UnormR8","line":"107","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"UintR8","id":"UintR8","line":"108","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"NormR8","id":"NormR8","line":"109","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"IntR8","id":"IntR8","line":"110","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"UnormA8","id":"UnormA8","line":"111","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"SharedExpR9G9B9E5","id":"SharedExpR9G9B9E5","line":"113","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"UnormR8G8B8G8","id":"UnormR8G8B8G8","line":"114","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"UnormG8R8G8B8","id":"UnormG8R8G8B8","line":"115","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"UnormBc1","id":"UnormBc1","line":"117","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"SrgbUnormBc1","id":"SrgbUnormBc1","line":"118","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"UnormBc2","id":"UnormBc2","line":"120","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"SrgbUnormBc2","id":"SrgbUnormBc2","line":"121","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"UnormBc3","id":"UnormBc3","line":"123","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"SrgbUnormBc3","id":"SrgbUnormBc3","line":"124","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"UnormBc4","id":"UnormBc4","line":"126","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"NormBc4","id":"NormBc4","line":"127","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"UnormBc5","id":"UnormBc5","line":"129","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"NormBc5","id":"NormBc5","line":"130","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"UnormB5G6R5","id":"UnormB5G6R5","line":"131","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"UnormB5G5R5A1","id":"UnormB5G5R5A1","line":"132","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"UnormB8G8R8A8","id":"UnormB8G8R8A8","line":"133","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"UnormB8G8R8X8","id":"UnormB8G8R8X8","line":"134","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"XrBiasA2UnormR10G10B10","id":"XrBiasA2UnormR10G10B10","line":"135","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"SrgbUnormB8G8R8A8","id":"SrgbUnormB8G8R8A8","line":"137","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"SrgbUnormB8G8R8X8","id":"SrgbUnormB8G8R8X8","line":"139","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"Uf16Bc6h","id":"Uf16Bc6h","line":"141","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"Sf16Bc6h","id":"Sf16Bc6h","line":"142","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"UnormBc7","id":"UnormBc7","line":"144","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"SrgbUnormBc7","id":"SrgbUnormBc7","line":"145","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"UnormR8G8B8","id":"UnormR8G8B8","line":"167","kind":"variable"}],"line":"28","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"The indices used when accessing a cube map.","uri":"package:spectre/src/spectre_asset_pack/dds_file.dart","name":"DdsCubeMapFace","id":"DdsCubeMapFace","children":[{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"Index of the positive x face.","name":"PositiveX","id":"PositiveX","line":"788","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"Index of the negative x face.","name":"NegativeX","id":"NegativeX","line":"790","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"Index of the positive y face.","name":"PositiveY","id":"PositiveY","line":"792","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"Index of the negative y face.","name":"NegativeY","id":"NegativeY","line":"794","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"Index of the positive z face.","name":"PositiveZ","id":"PositiveZ","line":"796","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"Index of the negative z face.","name":"NegativeZ","id":"NegativeZ","line":"798","kind":"variable"}],"line":"786","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"The extended header for the DDS file format.\n\nThe presence of this header is optional. If the character code in [DdsPixelFormat]\nis \"DX10\" then the header is present.\n\nAccessors correspond to the [DDS_HEADER_DX10](http://msdn.microsoft.com/en-us/library/windows/desktop/bb943983)\nstructure.","uri":"package:spectre/src/spectre_asset_pack/dds_file.dart","name":"DdsExtendedHeader","id":"DdsExtendedHeader","children":[{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The resource format.","name":"resourceFormat","id":"resourceFormat","line":"776","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The dimensionality of the resource.","name":"dimension","id":"dimension","line":"778","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"Identifies other less common options.","name":"flags","id":"flags","line":"780","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The number of elements present in the array.","name":"arraySize","id":"arraySize","line":"782","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"The offset in bytes to the DDS_HEADER_DX10 struct within the file.","name":"_byteOffset","isPrivate":true,"id":"_byteOffset","line":"731","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"The size of the DDS_HEADER_DX10 struct.","name":"_structSize","isPrivate":true,"id":"_structSize","line":"733","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"Resource is a one dimensional texture.","name":"isTexture1d","id":"isTexture1d","line":"736","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"Resource is a two dimensional texture.","name":"isTexture2d","id":"isTexture2d","line":"738","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"Resource is a three dimensional texture.","name":"isTexture3d","id":"isTexture3d","line":"740","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"Resource is a cube map","name":"isCubeMap","id":"isCubeMap","line":"742","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The resource format.","name":"_resourceFormat","isPrivate":true,"id":"_resourceFormat","line":"749","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The dimensionality of the resource.","name":"_dimension","isPrivate":true,"id":"_dimension","line":"751","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"Identifies other less common options.","name":"_flags","isPrivate":true,"id":"_flags","line":"753","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The number of elements present in the array.","name":"_arraySize","isPrivate":true,"id":"_arraySize","line":"755","kind":"variable"},{"comment":"Creates an instance of the [DdsPixelFormat] class.","name":"DdsExtendedHeader._internal","isPrivate":true,"id":"DdsExtendedHeader._internal1()","children":[{"ref":{"refId":"dart.typed_data/Uint8List","name":"Uint8List"},"name":"buffer","id":"buffer","kind":"param"}],"line":"762","kind":"constructor"}],"line":"725","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"The surface pixel format.\n\nAccessors correspond to the [DDS_PIXELFORMAT](http://msdn.microsoft.com/en-us/library/windows/desktop/bb943984)\nstructure.","uri":"package:spectre/src/spectre_asset_pack/dds_file.dart","name":"DdsPixelFormat","id":"DdsPixelFormat","children":[{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The size of the structure","name":"size","id":"size","line":"611","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"Flags to indicate what type of data is in the surface.","name":"flags","id":"flags","line":"613","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"Character code for specifying compressed or custom format.","name":"characterCode","id":"characterCode","line":"615","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"Number of bits in an RGB (possibly including alpha) format.","name":"rgbBitCount","id":"rgbBitCount","line":"617","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"Red (or lumiannce or Y) mask for reading color data.","name":"redBitMask","id":"redBitMask","line":"619","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"Green (or U) mask for reading color data.","name":"greenBitMask","id":"greenBitMask","line":"621","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"Blue (or V) mask for reading color data.","name":"blueBitMask","id":"blueBitMask","line":"623","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"Alpha mask for reading alpha data.","name":"alphaBitMask","id":"alphaBitMask","line":"625","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"Gets the resource format.\n\nIf the [DdsExtendedHeader] is present then this value should be ignored.","name":"resourceFormat","id":"resourceFormat","line":"630","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"The offset in bytes to the DDS_PIXELFORMAT struct within the file.\n\nThe DDS_PIXEL_FORMAT is within the boundary of DDS_HEADER.","name":"_byteOffset","isPrivate":true,"id":"_byteOffset","line":"476","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"The size of the DDS_PIXELFORMAT struct.","name":"_structSize","isPrivate":true,"id":"_structSize","line":"478","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"Texture contains alpha data","name":"_hasAlphaData","isPrivate":true,"id":"_hasAlphaData","line":"485","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"Texture contains alpha data (legacy).","name":"_hasAlphaDataLegacy","isPrivate":true,"id":"_hasAlphaDataLegacy","line":"487","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"Texture contains compressed data, floating point data, or some exotic format.\n\nIf the flag is present the value in [characterCode] is valid.","name":"_hasCharacterCode","isPrivate":true,"id":"_hasCharacterCode","line":"491","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"Texture contains uncompressed RGB data.\n\nThe values in bitCount and the RGB masks [redBitMask], [greenBitMask], [blueBitMask] contain valid data.","name":"_hasRgbValues","isPrivate":true,"id":"_hasRgbValues","line":"495","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"Texture contains YUV compressed data.\n\nThe value in bitCount contains the YUV bit count. The Y mask is within [redBitMask]. The U mask is\nwithin [greenBitMask]. The V mask is within [blueBitMask].","name":"_hasYuvValues","isPrivate":true,"id":"_hasYuvValues","line":"500","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"Texture contains luminance data or some other single channel color.\n\nThe value in bitCount contains the luminance channel bit count. The channel mask is contained in\n[redBitMask]. It can be combined with _hasAlphaData for a two channel DDS file.","name":"_hasLuminanceValues","isPrivate":true,"id":"_hasLuminanceValues","line":"505","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"Texture contains uncompressed RGBA data.\n\nThe values in bitCount and the RGB masks [redBitMask], [greenBitMask], [blueBitMask], and [alphaBitMask]\ncontain valid data.","name":"_hasRgbaValues","isPrivate":true,"id":"_hasRgbaValues","line":"510","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"Texture contains two channels.","name":"_hasTwoChannels","isPrivate":true,"id":"_hasTwoChannels","line":"512","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"The DXT1 character code, 'DXT1'.","name":"_dxt1CharacterCode","isPrivate":true,"id":"_dxt1CharacterCode","line":"519","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"The DXT2 character code, 'DXT2'.","name":"_dxt2CharacterCode","isPrivate":true,"id":"_dxt2CharacterCode","line":"521","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"The DXT3 character code, 'DXT3'.","name":"_dxt3CharacterCode","isPrivate":true,"id":"_dxt3CharacterCode","line":"523","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"The DXT4 character code, 'DXT4'.","name":"_dxt4CharacterCode","isPrivate":true,"id":"_dxt4CharacterCode","line":"525","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"The DXT5 character code, 'DXT5'.","name":"_dxt5CharacterCode","isPrivate":true,"id":"_dxt5CharacterCode","line":"527","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"The BC4U character code, 'BC4U'.","name":"_bc4uCharacterCode","isPrivate":true,"id":"_bc4uCharacterCode","line":"529","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"The BC4S character code, 'BC4S'.","name":"_bc4sCharacterCode","isPrivate":true,"id":"_bc4sCharacterCode","line":"531","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"The ATI2 character code, 'ATI2'.","name":"_ati2CharacterCode","isPrivate":true,"id":"_ati2CharacterCode","line":"533","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"The BC5U character code, 'BC5U'.","name":"_bc5uCharacterCode","isPrivate":true,"id":"_bc5uCharacterCode","line":"535","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"The BC5S character code, 'BC5S'.","name":"_bc5sCharacterCode","isPrivate":true,"id":"_bc5sCharacterCode","line":"537","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"The RGBG character code, 'RGBG'.","name":"_rgbgCharacterCode","isPrivate":true,"id":"_rgbgCharacterCode","line":"539","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"The GRGB character code, 'GRGB'.","name":"_grbgCharacterCode","isPrivate":true,"id":"_grbgCharacterCode","line":"541","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"The UYVY character code, 'UYVY'.","name":"_uyvyCharacterCode","isPrivate":true,"id":"_uyvyCharacterCode","line":"543","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"The YUY2 character code, 'YUY2'.","name":"_yuy2CharacterCode","isPrivate":true,"id":"_yuy2CharacterCode","line":"545","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"64-bit RGBA unsigned-normalized-integer character code.","name":"_unormR16G16B16A16CharacterCode","isPrivate":true,"id":"_unormR16G16B16A16CharacterCode","line":"547","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"64-bit RGBA signed-normalized-integer character code.","name":"_normR16G16B16A16CharacterCode","isPrivate":true,"id":"_normR16G16B16A16CharacterCode","line":"549","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"16-bit R floating point character code.","name":"_floatR16CharacterCode","isPrivate":true,"id":"_floatR16CharacterCode","line":"551","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"32-bit RG floating point character code.","name":"_floatR16G16CharacterCode","isPrivate":true,"id":"_floatR16G16CharacterCode","line":"553","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"64-bit RGBA floating point character code.","name":"_floatR16G16B16A16CharacterCode","isPrivate":true,"id":"_floatR16G16B16A16CharacterCode","line":"555","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"32-bit R floating point character code.","name":"_floatR32CharacterCode","isPrivate":true,"id":"_floatR32CharacterCode","line":"557","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"64-bit RG floating point character code.","name":"_floatR32G32CharacterCode","isPrivate":true,"id":"_floatR32G32CharacterCode","line":"559","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"128-bit RGBA floating point character code.","name":"_floatR32G32B32A32CharacterCode","isPrivate":true,"id":"_floatR32G32B32A32CharacterCode","line":"561","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"The DX10 character code, 'DX10'.\n\nMeans that the extended header DX10 is present.","name":"_dx10CharacterCode","isPrivate":true,"id":"_dx10CharacterCode","line":"565","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The size of the structure","name":"_size","isPrivate":true,"id":"_size","line":"572","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"Flags to indicate what type of data is in the surface.","name":"_flags","isPrivate":true,"id":"_flags","line":"574","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"Character code for specifying compressed or custom format.","name":"_characterCode","isPrivate":true,"id":"_characterCode","line":"576","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"Number of bits in an RGB (possibly including alpha) format.","name":"_rgbBitCount","isPrivate":true,"id":"_rgbBitCount","line":"578","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"Red (or lumiannce or Y) mask for reading color data.","name":"_redBitMask","isPrivate":true,"id":"_redBitMask","line":"580","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"Green (or U) mask for reading color data.","name":"_greenBitMask","isPrivate":true,"id":"_greenBitMask","line":"582","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"Blue (or V) mask for reading color data.","name":"_blueBitMask","isPrivate":true,"id":"_blueBitMask","line":"584","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"Alpha mask for reading alpha data.","name":"_alphaBitMask","isPrivate":true,"id":"_alphaBitMask","line":"586","kind":"variable"},{"comment":"Creates an instance of the [DdsPixelFormat] class.","name":"DdsPixelFormat._internal","isPrivate":true,"id":"DdsPixelFormat._internal1()","children":[{"ref":{"refId":"dart.typed_data/Uint8List","name":"Uint8List"},"name":"buffer","id":"buffer","kind":"param"}],"line":"593","kind":"constructor"}],"line":"468","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"The header for the DDS file format.\n\nAccessors correspond to the [DDS_HEADER](http://msdn.microsoft.com/en-us/library/windows/desktop/bb943982)\nstructure.","uri":"package:spectre/src/spectre_asset_pack/dds_file.dart","name":"DdsHeader","id":"DdsHeader","children":[{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The size of the structure.","name":"size","id":"size","line":"441","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"Flags to indicate which members contain valid data.","name":"flags","id":"flags","line":"443","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The height of the compressed texture.","name":"height","id":"height","line":"445","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The width of the compressed texture.","name":"width","id":"width","line":"447","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"pitchOrLinearSize","id":"pitchOrLinearSize","line":"449","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The depth of the compressed texture.","name":"depth","id":"depth","line":"451","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The number of mipmap levels.","name":"mipMapCount","id":"mipMapCount","line":"453","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"Gets the surface complexity.","name":"surfaceComplexity","id":"surfaceComplexity","line":"455","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"Gets details about the surface being stored.\n\nStores flags signifying that a cubemap or volume texture is being\nused. If the extended header is present then that data takes\nprecedence.","name":"surfaceDetail","id":"surfaceDetail","line":"461","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"The offset in bytes to the DDS_HEADER struct within the file.","name":"_byteOffset","isPrivate":true,"id":"_byteOffset","line":"339","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"The size of the DDS_HEADER struct.","name":"_structSize","isPrivate":true,"id":"_structSize","line":"341","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"Flag within [flags] that signifies the textures have width.","name":"hasWidth","id":"hasWidth","line":"348","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"Flag within [flags] that signifies the textures have height.","name":"hasHeight","id":"hasHeight","line":"350","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"Flag within [flags] that signifies the textures have depth.","name":"hasDepth","id":"hasDepth","line":"352","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"Flag within [flags] that signfies the textures have mipmaps.","name":"hasMipMaps","id":"hasMipMaps","line":"354","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"Flag within [surfaceDetail] that signifies a cube map is present.","name":"isCubeMap","id":"isCubeMap","line":"357","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"Flag within [surfaceDetail] that the positive x surface is present.","name":"hasCubeMapPositiveX","id":"hasCubeMapPositiveX","line":"359","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"Flag within [surfaceDetail] that the negative x surface is present.","name":"hasCubeMapNegativeX","id":"hasCubeMapNegativeX","line":"361","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"Flag within [surfaceDetail] that the positive y surface is present.","name":"hasCubeMapPositiveY","id":"hasCubeMapPositiveY","line":"363","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"Flag within [surfaceDetail] that the negative y surface is present.","name":"hasCubeMapNegativeY","id":"hasCubeMapNegativeY","line":"365","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"Flag within [surfaceDetail] that the positive z surface is present.","name":"hasCubeMapPositiveZ","id":"hasCubeMapPositiveZ","line":"367","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"Flag within [surfaceDetail] that the negative z surface is present.","name":"hasCubeMapNegativeZ","id":"hasCubeMapNegativeZ","line":"369","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"Flag within [surfaceDetail] signifying all cube map data is present.","name":"hasAllCubeMapFaces","id":"hasAllCubeMapFaces","line":"371","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"Flag within [surfaceDetail] that signifies a volume textue is present.","name":"isVolumeTexture","id":"isVolumeTexture","line":"376","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The size of the structure.","name":"_size","isPrivate":true,"id":"_size","line":"383","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"Flags to indicate which members contain valid data.","name":"_flags","isPrivate":true,"id":"_flags","line":"385","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The height of the compressed texture.","name":"_height","isPrivate":true,"id":"_height","line":"387","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The width of the compressed texture.","name":"_width","isPrivate":true,"id":"_width","line":"389","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_pitchOrLinearSize","isPrivate":true,"id":"_pitchOrLinearSize","line":"391","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The depth of the compressed texture.","name":"_depth","isPrivate":true,"id":"_depth","line":"393","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The number of mipmap levels.","name":"_mipMapCount","isPrivate":true,"id":"_mipMapCount","line":"395","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"Gets the surface complexity.","name":"_surfaceComplexity","isPrivate":true,"id":"_surfaceComplexity","line":"397","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"Gets details about the surface being stored.\n\nStores flags signifying that a cubemap or volume texture is being\nused. If the extended header is present then that data takes\nprecedence.","name":"_surfaceDetail","isPrivate":true,"id":"_surfaceDetail","line":"403","kind":"variable"},{"comment":"Creates an instance of the [DdsHeader] class.","name":"DdsHeader._internal","isPrivate":true,"id":"DdsHeader._internal1()","children":[{"ref":{"refId":"dart.typed_data/Uint8List","name":"Uint8List"},"name":"buffer","id":"buffer","kind":"param"}],"line":"410","kind":"constructor"}],"line":"333","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"Wrapper around a Direct Draw Surface (.dds) file providing access to its contents.\n\nA DDS file is a container for texture data. It can contain texture data with many\ndifferent formats, but the most common are DXT compressed formats. The use of DXT\nformats require the [WEBGL_compressed_texture_s3tc](http://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc/)\nextension, whose availablility can be queried using [GraphicsDeviceCapabilities.hasCompressedTextureS3TC].\n\nThe format can hold one or more textures as well as mipmap levels for them. One\nuse for holding multiple textures is for cube maps.","uri":"package:spectre/src/spectre_asset_pack/dds_file.dart","name":"DdsFile","id":"DdsFile","children":[{"returnType":{"refId":"dart.typed_data/Uint8List","name":"Uint8List"},"comment":"Gets the pixel data from the texture at the given [index] with the requested mipmap [level].","name":"getPixelData","id":"getPixelData2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"level","id":"level","kind":"param"}],"line":"200","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"Get the offset to an image within the file.","name":"_getImageOffset","isPrivate":true,"id":"_getImageOffset1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"269","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"Get the offset to a mipmap level within the file.","name":"_getMipMapLevelOffset","isPrivate":true,"id":"_getMipMapLevelOffset1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"level","id":"level","kind":"param"}],"line":"274","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"Computes the size of a compressed texture.","name":"_getCompressedSize","isPrivate":true,"id":"_getCompressedSize3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"width","id":"width","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"height","id":"height","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"blockSize","id":"blockSize","kind":"param"}],"line":"310","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"Computes the stride of an image given its [width] and [format].\n\nThe computed stride is not always at a 32-bit boundary. If this is the case\nthe image will require padding.","name":"_getStride","isPrivate":true,"id":"_getStride2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"width","id":"width","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"format","id":"format","kind":"param"}],"line":"318","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The width of the compressed texture(s).","name":"width","id":"width","line":"143","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The height of the compressed texture(s).","name":"height","id":"height","line":"145","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The depth of the compressed texture(s).","name":"depth","id":"depth","line":"147","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The number of mipmaps within the texture(s).\n\nThe mipmap count includes the original texture. A mipmap count of\n1 means that there are no mipmaps actually present within the file.","name":"mipMapCount","id":"mipMapCount","line":"152","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The [DdsResourceFormat] for the DDS file.","name":"resourceFormat","id":"resourceFormat","line":"154","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The number of textures within the DDS file.","name":"arraySize","id":"arraySize","line":"156","kind":"property"},{"ref":{"refId":"spectre_asset_pack/DdsHeader","name":"DdsHeader"},"comment":"The header for the DDS file.","name":"header","id":"header","line":"158","kind":"property"},{"ref":{"refId":"spectre_asset_pack/DdsPixelFormat","name":"DdsPixelFormat"},"comment":"The pixel format of the texture data contained within the DDS file.","name":"pixelFormat","id":"pixelFormat","line":"160","kind":"property"},{"ref":{"refId":"spectre_asset_pack/DdsExtendedHeader","name":"DdsExtendedHeader"},"comment":"The extended header for the DDS file.","name":"extendedHeader","id":"extendedHeader","line":"162","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"Whether the DDS file contains a cube map.","name":"isCubeMap","id":"isCubeMap","line":"165","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"Whether all faces within a cube map are present.","name":"hasAllCubeMapFaces","id":"hasAllCubeMapFaces","line":"174","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"Whether the DDS file contains a volume texture.","name":"isVolumeTexture","id":"isVolumeTexture","line":"184","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"Whether the DDS file has an extended header.","name":"hasExtendedHeader","id":"hasExtendedHeader","line":"193","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"Magic number for a DDS file\n\nValue is 0x20534444 which is 'DDS ' in ASCII.","name":"_magicNumber","isPrivate":true,"id":"_magicNumber","line":"40","kind":"variable"},{"ref":{"refId":"dart.typed_data/Uint8List","name":"Uint8List"},"comment":"The buffer holding the file contents.","name":"_buffer","isPrivate":true,"id":"_buffer","line":"47","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The offset to the data section of the file.","name":"_dataOffset","isPrivate":true,"id":"_dataOffset","line":"49","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The [DdsResourceFormat] for the DDS file.","name":"_resourceFormat","isPrivate":true,"id":"_resourceFormat","line":"51","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The number of textures within the DDS file.","name":"_arraySize","isPrivate":true,"id":"_arraySize","line":"53","kind":"variable"},{"ref":{"refId":"spectre_asset_pack/DdsHeader","name":"DdsHeader"},"comment":"The header for the DDS file.","name":"_header","isPrivate":true,"id":"_header","line":"55","kind":"variable"},{"ref":{"refId":"spectre_asset_pack/DdsPixelFormat","name":"DdsPixelFormat"},"comment":"The pixel format of the texture data contained within the DDS file.","name":"_pixelFormat","isPrivate":true,"id":"_pixelFormat","line":"57","kind":"variable"},{"ref":{"refId":"spectre_asset_pack/DdsExtendedHeader","name":"DdsExtendedHeader"},"comment":"The extended header for the DDS file.","name":"_extendedHeader","isPrivate":true,"id":"_extendedHeader","line":"59","kind":"variable"},{"comment":"Creates an instance of the [DdsFile] class.\n\nThe contents of the DDS file in its entirery are within [buffer]. During\nconstruction an [ArgumentError] will be thrown if the [buffer] does not contain\na valid DDS file.","name":"DdsFile","id":"DdsFile1()","children":[{"ref":{"refId":"dart.typed_data/Uint8List","name":"Uint8List"},"name":"buffer","id":"buffer","kind":"param"}],"line":"70","kind":"constructor"}],"line":"32","kind":"class"}],"line":"24","kind":"library"}